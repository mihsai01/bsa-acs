name: DRTM-ACS regression


on:
  push:
    branches:                # trigger on push to master
      - main
  pull_request:              # trigger on pull requests to master
    branches:
      - main
  workflow_dispatch:         # to dispatch from Github Actions

jobs:
    build_drtm_acpi:
        name: DRTM-ACS UEFI build for ACPI target
        runs-on: ubuntu-latest

        steps:
          - name: Install dependencies
            run: sudo apt-get update && sudo apt-get install -y build-essential uuid-dev iasl git  nasm  python-is-python3

          - name: Download edk2 and its submodules
            run: |
              git clone --recursive https://github.com/tianocore/edk2
              cd edk2
              git checkout edk2-stable202411
              cd ..
              git clone https://github.com/tianocore/edk2-libc edk2/edk2-libc

          - name: Checkout bsa-acs repository
            uses: actions/checkout@v4
            with:
              path: 'edk2/ShellPkg/Application/bsa-acs'

          - name: Apply edk2 DRTM patch for ACPI target
            run: |
              cd edk2
              git apply ShellPkg/Application/bsa-acs/patches/edk2_drtm.patch

          - name: Download Arm GCC cross-compiler
            run: |
              mkdir -p /opt/cross
              cd /opt/cross
              wget https://developer.arm.com/-/media/Files/downloads/gnu/13.2.rel1/binrel/arm-gnu-toolchain-13.2.rel1-x86_64-aarch64-none-linux-gnu.tar.xz
              tar -xf arm-gnu-toolchain-13.2.rel1-x86_64-aarch64-none-linux-gnu.tar.xz

          - name: Set up EDK2 environment and build Drtm.efi
            run: |
              cd edk2
              export GCC49_AARCH64_PREFIX=/opt/cross/arm-gnu-toolchain-13.2.Rel1-x86_64-aarch64-none-linux-gnu/bin/aarch64-none-linux-gnu-
              export PACKAGES_PATH=$PWD/edk2-libc
              source edksetup.sh
              make -C BaseTools/Source/C
              source ShellPkg/Application/bsa-acs/tools/scripts/acsbuild.sh ENABLE_DRTM

          - name: Save Drtm.efi as an artifact
            uses: actions/upload-artifact@v4
            with:
              name: Drtm_acpi_target.efi
              path: edk2/Build/Shell/DEBUG_GCC49/AARCH64/Drtm.efi
              if-no-files-found: error

          - name: Download TF-A
            run: |
              git clone https://git.trustedfirmware.org/TF-A/trusted-firmware-a.git
              cd trusted-firmware-a
              git checkout integration

          - name: Download MBedTLS
            run: |
              git clone https://github.com/Mbed-TLS/mbedtls.git
              cd mbedtls
              git checkout v3.6.2

          - name: Download Base Platform RevC Fast-Model
            run: |
              wget https://developer.arm.com/-/media/Files/downloads/ecosystem-models/FM_11_25/FVP_Base_RevC-2xAEMvA_11.25_15_Linux64.tgz
              tar -xf FVP_Base_RevC-2xAEMvA_11.25_15_Linux64.tgz

          - name: Download Prebuilt TF-A binary for DRTM
            run: |
              wget https://downloads.trustedfirmware.org/tf-a/drtm/FVP_AARCH64_EFI.fd

          - name: Download Compiler for TF-A
            run: |
              wget https://developer.arm.com/-/media/Files/downloads/gnu/13.2.rel1/binrel/arm-gnu-toolchain-13.2.rel1-x86_64-aarch64-none-elf.tar.xz
              xz -d arm-gnu-toolchain-13.2.rel1-x86_64-aarch64-none-elf.tar.xz
              tar -xf arm-gnu-toolchain-13.2.rel1-x86_64-aarch64-none-elf.tar

          - name: Compile TF-A
            run: |
              sudo -s
              sudo apt-get install device-tree-compiler
              cd trusted-firmware-a
              make CROSS_COMPILE=${GITHUB_WORKSPACE}/arm-gnu-toolchain-13.2.Rel1-x86_64-aarch64-none-elf/bin/aarch64-none-elf- ARM_ROTPK_LOCATION=devel_rsa DEBUG=1 V=1 BL33=${GITHUB_WORKSPACE}/FVP_AARCH64_EFI.fd DRTM_SUPPORT=1 MBEDTLS_DIR=${GITHUB_WORKSPACE}/mbedtls USE_ROMLIB=1 FVP_TRUSTED_SRAM_SIZE=512 clean all fip

          - name: Create image from EFI
            run: |
              sudo -s
              mv edk2/ShellPkg/Application/bsa-acs/.github/prebuilt_image.img.xz .
              xz -df prebuilt_image.img.xz
              mkdir -p `pwd`/mnt/
              partition_name=`sudo kpartx -a -v prebuilt_image.img | grep -Po -m 1 "loop\d+p\d"`
              sudo mount /dev/mapper/$partition_name `pwd`/mnt
              sudo cp edk2/Build/Shell/DEBUG_GCC49/AARCH64/Drtm.efi `pwd`/mnt
              sudo cp edk2/ShellPkg/Application/bsa-acs/.github/startup.nsh `pwd`/mnt/
              sudo umount `pwd`/mnt/
              sudo kpartx -d -v prebuilt_image.img

          - name: Run DRTM-ACS on Base FVP RevC Model
            run: |
              Base_RevC_AEMvA_pkg/models/Linux64_GCC-9.3/FVP_Base_RevC-2xAEMvA \
              --data cluster0.cpu0=trusted-firmware-a/build/fvp/debug/romlib/romlib.bin@0x03ff2000 \
              --stat \
              -C bp.pl011_uart0.untimed_fifos=1 -C bp.pl011_uart0.unbuffered_output=1 -C bp.pl011_uart0.out_file=Drtm_regression.log -C bp.pl011_uart0.shutdown_tag="DRTM tests complete" \
              -C bp.pl011_uart1.untimed_fifos=1 -C bp.pl011_uart1.unbuffered_output=1 -C bp.pl011_uart1.out_file=Drtm_uart1.log \
              -C bp.flashloader0.fname=trusted-firmware-a/build/fvp/debug/fip.bin \
              -C bp.secureflashloader.fname=trusted-firmware-a/build/fvp/debug/bl1.bin \
              -C bp.terminal_0.start_telnet=0 \
              -C bp.terminal_1.start_telnet=0 \
              -C bp.terminal_2.start_telnet=0 \
              -C bp.ve_sysregs.exit_on_shutdown=1 \
              -C bp.virtioblockdevice.image_path=prebuilt_image.img \
              -C bp.vis.disable_visualisation=1 \
              -C cache_state_modelled=0 \
              -C cluster0.check_memory_attributes=0 \
              -C cluster0.cpu0.etm-present=0 \
              -C cluster0.cpu1.etm-present=0 \
              -C cluster0.cpu2.etm-present=0 \
              -C cluster0.cpu3.etm-present=0 \
              -C cluster0.stage12_tlb_size=1024 \
              -C cluster1.check_memory_attributes=0 \
              -C cluster1.cpu0.etm-present=0 \
              -C cluster1.cpu1.etm-present=0 \
              -C cluster1.cpu2.etm-present=0 \
              -C cluster1.cpu3.etm-present=0 \
              -C cluster1.stage12_tlb_size=1024 \
              -C pctl.startup=0.0.0.0 \
              -Q 1000 \
              "$@"

          - name: Save Drtm.img as an artifact
            uses: actions/upload-artifact@v4
            with:
              name: Drtm.img
              path: prebuilt_image.img
              if-no-files-found: error

          - name: Save DRTM Regression logs as artifact
            uses: actions/upload-artifact@v4
            with:
              name: Drtm_regression.log
              path: Drtm_regression.log
              if-no-files-found: error

